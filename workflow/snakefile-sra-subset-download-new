
dir_path = os.getcwd()

##### Target rules #####

import pandas as pd

#samples_df = pd.read_table('data/meta/allSamples_sra_newPlatypus.list').set_index("sample", drop=False)
#sra_files = list(samples_df['sample'])

samples_df = pd.read_table('data/meta/guppyAcc.list').set_index("sample", drop=False)
sra_files = list(samples_df['sample'])



rule all:
    input:
        expand("data/fastq/{accession}_1.fastq.gz", accession=sra_files),
        expand("data/fastq/{accession}_2.fastq.gz", accession=sra_files),


# Rules

#rule get_fastq_pe:
#    output:
#        # the wildcard name must be accession, pointing to an SRA number
#        temp("data/fastq/{accession}_1.fastq"),
#        temp("data/fastq/{accession}_2.fastq")
#    params:
#        # optional extra arguments
#        extra="--temp ./tmp"
#    threads: 6  # defaults to 6
#    wrapper:
#        "v0.75.0/bio/sra-tools/fasterq-dump"


rule get_fastq_pe:
    output:
        # the wildcard name must be accession, pointing to an SRA number
        temp("data/fastq/{accession}_1.fastq"),
        temp("data/fastq/{accession}_2.fastq")
    params:
        # optional extra arguments
#        extra="--temp ./tmp",
        sample="{accession}"
    threads: 12  # defaults to 6
    shell:
        """
        mkdir -p tmp_{params.sample}
        fasterq-dump --temp tmp_{params.sample} --threads {threads} --outdir data/fastq {params.sample}
        rm -r tmp_{params.sample}
        """

rule pigz: 
    input: 
        fq1="data/fastq/{accession}_1.fastq",
        fq2="data/fastq/{accession}_2.fastq"
    output: 
        fq1="data/fastq/{accession}_1.fastq.gz",
        fq2="data/fastq/{accession}_2.fastq.gz"
    threads: 12  # defaults to 6
    shell: 
        """
        pigz {input.fq1} -p {threads}
        pigz {input.fq2} -p {threads} 
        """