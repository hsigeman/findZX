
dir_path = os.getcwd()

##### Target rules #####

import pandas as pd

samples_df = pd.read_table('data/meta/allSamples_sra.list').set_index("sample", drop=False)
sra_files = list(samples_df['sample'])


rule all:
    input:
        expand("data/fastq/done__{sra}_dump", sra=sra_files),



# Rules


rule prefetch:
    output:
        "data/fastq/.prefetch/sra/{sra}.sra",
    params:
       # "{sra} -X 10000 -O data/fastq"
       "{sra} -O data/fastq"
    log:
        "data/fastq/.prefetch/sra/{sra}.log"
    shell:
        """
        prefetch {params} > {log} 2>&1 && touch {output}
        """


rule fasterqdump:
    input:
        "data/fastq/.prefetch/sra/{sra}.sra",
    output:
        touch("data/fastq/done__{sra}_dump")
    params:
       # args = "-X 1000000 --gzip --split-files -O data/fastq/",
        args = "-S -O data/fastq/ -t data/fastq/",
        id_sra = "{sra}"
    log:
        "data/fastq/{sra}.log"
    threads: 10
    shell:
        """
        fasterq-dump {params.args} {params.id_sra} --threads {threads} -Z | gzip > {log} 2>&1 
        """


#rule fastqdump:
#    input:
#        "data/fastq/.prefetch/sra/{sra}.sra",
#    output:
#        touch("data/fastq/done__{sra}_dump")
#    params:
#       # args = "-X 1000000 --gzip --split-files -O data/fastq/",
#        args = "--gzip --split-files -O data/fastq/",
#        id_sra = "{sra}"
#    log:
#        "data/fastq/{sra}.log"
#    shell:
#        """
#        fastq-dump {params.args} {params.id_sra} > {log} 2>&1 
#        """